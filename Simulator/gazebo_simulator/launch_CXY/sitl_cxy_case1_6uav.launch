<!-- Case 1 -->
<launch>
	<!-- 环境变量，PX4仿真启动脚本rcS中需要用到 -->
	<env name="PX4_SIM_MODEL" value="solo" />
    <env name="PX4_ESTIMATOR" value="ekf2_vision" />

	<!-- 启动Gazebo，可选择仿真所用的world -->
    <arg name="gui" default="true"/>
	<arg name="world" default="$(find prometheus_gazebo)/worlds/002_SYSU/SYSU_vicon_room.world"/>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
    </include>

	<!-- 使用group标签来对不同的无人机进行分组，因此，不同无人机的话题会带上前缀，如/uav0、/uav1等 -->
	<!-- 理解仿真的四个模块, 其中1和2为必备模块，3和4可缺省 -->
	<!-- 1、PX4_SITL PX4软件在环仿真模块，即代表飞控，这块代码在Firmware中，注意部分代码与实际飞行相同，部分则是独立的代码 -->
	<!-- 2、simulator 仿真器模块，此处即Gazebo，代码为model文件中的plugin -->
	<!-- 3、Offboard模块 即Mavros -->
	<!-- 4、QGC模块 即地面站--> 

	<!-- 可以参考rcS文件，其中有端口号定义 -->
	<!-- 无人机编号（PX4内部参数） 	MAV_SYS_ID = ID + 1 ID从0开始--> 
	<!-- 仿真器端口号（用于飞控与Gazebo进行通讯）	 mavlink_tcp_port（simulator_tcp_port） = 4560 + ID （需要再SDF文件中配置对应的参数 mavlink_tcp_port）-->
	<!-- mavlink_tcp_port（该参数在飞机模型sdf文件中） 这个不能随意指定，必须从4560开始递增，因为这个是遵从gazebo的递增规律 -->
	<!-- Offboard端口号（用于飞控与Mavros进行通讯） udp_offboard_port_local = 34580 + ID -->
	<!-- Offboard端口号（用于飞控与Mavros进行通讯） udp_offboard_port_remote = 24540 + ID -->

	<!-- 参数配置 -->
	<arg name="uav1_name" default="uav1"/>
	<arg name="uav2_name" default="uav2"/>
	<arg name="uav3_name" default="uav3"/>
	<arg name="uav4_name" default="uav4"/>
	<arg name="uav5_name" default="uav5"/>
	<arg name="uav6_name" default="uav6"/>
	<arg name="uav7_name" default="uav7"/>
	<arg name="uav8_name" default="uav8"/>

	<arg name="uav1_id" default="1"/>
	<arg name="uav2_id" default="2"/>
	<arg name="uav3_id" default="3"/>
	<arg name="uav4_id" default="4"/>
	<arg name="uav5_id" default="5"/>
	<arg name="uav6_id" default="6"/>

	<arg name="uav1_x" default="0.5"/>
    <arg name="uav1_y" default="0.0"/>

    <arg name="uav2_x" default="-0.5"/>
    <arg name="uav2_y" default="0.0"/>

    <arg name="uav3_x" default="1.5"/>
    <arg name="uav3_y" default="0.0"/>

    <arg name="uav4_x" default="-1.5"/>
    <arg name="uav4_y" default="0.0"/>

    <arg name="uav5_x" default="2.5"/>
    <arg name="uav5_y" default="0.0"/>

	<arg name="uav6_x" default="-2.5"/>
    <arg name="uav6_y" default="0.0"/>

	<!--1~6号机的初始位置-->
    <param name="uav1_x" value="$(arg uav1_x)"/>
	<param name="uav1_y" value="$(arg uav1_y)"/>

	<param name="uav2_x" value="$(arg uav2_x)"/>
	<param name="uav2_y" value="$(arg uav2_y)"/>

	<param name="uav3_x" value="$(arg uav3_x)"/>
	<param name="uav3_y" value="$(arg uav3_y)"/>

	<param name="uav4_x" value="$(arg uav4_x)"/>
	<param name="uav4_y" value="$(arg uav4_y)"/>

	<param name="uav5_x" value="$(arg uav5_x)"/>
	<param name="uav5_y" value="$(arg uav5_y)"/>

	<param name="uav6_x" value="$(arg uav6_x)"/>
	<param name="uav6_y" value="$(arg uav6_y)"/>

    <!-- 1号飞机 -->
    <group ns="$(arg uav1_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav1_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav1/uav1.sdf"/>
		<arg name="model" default="uav1"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav1_x)"/>
		<arg name="y" default="$(arg uav1_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

    <!-- 2号飞机 -->
    <group ns="$(arg uav2_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav2_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav2/uav2.sdf"/>
		<arg name="model" default="uav2"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav2_x)"/>
		<arg name="y" default="$(arg uav2_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

    <!-- 3号飞机 -->
    <group ns="$(arg uav3_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav3_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav3/uav3.sdf"/>
		<arg name="model" default="uav3"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav3_x)"/>
		<arg name="y" default="$(arg uav3_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0.0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

    <!-- 4号飞机 -->
    <group ns="$(arg uav4_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav4_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav4/uav4.sdf"/>
		<arg name="model" default="uav4"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav4_x)"/>
		<arg name="y" default="$(arg uav4_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0.0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

    <!-- 5号飞机 -->
    <group ns="$(arg uav5_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav5_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav5/uav5.sdf"/>
		<arg name="model" default="uav5"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav5_x)"/>
		<arg name="y" default="$(arg uav5_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0.0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

    <!-- 6号飞机 -->
	<group ns="$(arg uav6_name)">
        <!-- 参数配置-->
		<!-- ID编号 -->
        <arg name="ID" value="$(eval -1 + arg('uav6_id'))"/>
		<!-- 指定sdf文件及模型名字 -->
		<arg name="sdf" default="$(find prometheus_gazebo)/amov_models/Multisolo/uav6/uav6.sdf"/>
		<arg name="model" default="uav6"/>
		<!-- 初始位置，Yaw为偏航角 -->
		<arg name="x" default="$(arg uav6_x)"/>
		<arg name="y" default="$(arg uav6_y)"/>
		<arg name="z" default="0.164"/>
		<arg name="Yaw" default="0.0"/>
		<!-- Mavros参数 -->
		<arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
		<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

		<!-- 启动PX4 SITL，此处参数配置不可删除 -->
		<arg name="interactive" default="true"/>
		<arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
		<arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>
		<node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" 
			args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_solo_$(arg ID) $(arg px4_command_arg1)">
		</node>

		<!-- 启动Gazebo模型 -->
		<node name="solo_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" 
			args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Yaw)">
		</node>

		<!-- 启动MAVROS -->
		<node pkg="mavros" type="mavros_node" name="mavros" output="screen">
			<param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
			<param name="gcs_url" value="" />
			<param name="target_system_id" value="$(eval 1 + arg('ID'))"/>
			<param name="target_component_id" value="1" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_pluginlists.yaml" />
			<rosparam command="load" file="$(find prometheus_gazebo)/config/mavros_config/px4_config.yaml" />
		</node>
    </group>

	<arg name="swarm_num" default="8"/>
	<arg name="k_p" default="1.0"/>
	<arg name="k_aij" default="0.05"/>
	<arg name="k_gamma" default="1.2"/>
	<arg name="Takeoff_height" default=""/>
	<arg name="Disarm_height" default="0.1"/>
	<arg name="Land_speed" default="0.2"/>
	<arg name="x_min" default="-4.5"/>
	<arg name="x_max" default="4.5"/>
	<arg name="y_min" default="-2.5"/>
	<arg name="y_max" default="2.5"/>
	<arg name="z_min" default="-1.0"/>
	<arg name="z_max" default="3.5"/>
	
	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav1" output="screen" launch-prefix="gnome-terminal --tab --">
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav1_id)"/>
		<param name="neighbour_id1" value="$(arg uav2_id)" />
		<param name="neighbour_id2" value="$(arg uav3_id)"/>
		<param name="uav_name" value="/$(arg uav1_name)"/>
		<param name="neighbour_name1" value="/$(arg uav2_name)" />
		<param name="neighbour_name2" value="/$(arg uav3_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>
		<param name="flag_printf" value="false"/>
	</node>

	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav2" output="screen" launch-prefix="gnome-terminal --tab --">	
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav2_id)"/>
		<param name="neighbour_id1" value="$(arg uav1_id)" />
		<param name="neighbour_id2" value="$(arg uav4_id)"/>
		<param name="uav_name" value="/$(arg uav2_name)"/>
		<param name="neighbour_name1" value="/$(arg uav1_name)" />
		<param name="neighbour_name2" value="/$(arg uav4_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>	
		<param name="flag_printf" value="false"/>
	</node>

	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav3" output="screen" launch-prefix="gnome-terminal --tab --">	
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav3_id)"/>
		<param name="neighbour_id1" value="$(arg uav1_id)" />
		<param name="neighbour_id2" value="$(arg uav5_id)"/>
		<param name="uav_name" value="/$(arg uav3_name)"/>
		<param name="neighbour_name1" value="/$(arg uav1_name)" />
		<param name="neighbour_name2" value="/$(arg uav5_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>
		<param name="flag_printf" value="false"/>	
	</node>

	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav4" output="screen" launch-prefix="gnome-terminal --tab --">	
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav4_id)"/>
		<param name="neighbour_id1" value="$(arg uav2_id)" />
		<param name="neighbour_id2" value="$(arg uav6_id)"/>
		<param name="uav_name" value="/$(arg uav4_name)"/>
		<param name="neighbour_name1" value="/$(arg uav2_name)" />
		<param name="neighbour_name2" value="/$(arg uav6_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>	
		<param name="flag_printf" value="false"/>
	</node>

	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav5" output="screen" launch-prefix="gnome-terminal --tab --">	
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav5_id)"/>
		<param name="neighbour_id1" value="$(arg uav3_id)" />
		<param name="neighbour_id2" value="$(arg uav6_id)"/>
		<param name="uav_name" value="/$(arg uav5_name)"/>
		<param name="neighbour_name1" value="/$(arg uav3_name)" />
		<param name="neighbour_name2" value="/$(arg uav7_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>
		<param name="flag_printf" value="false"/>	
	</node>

	<node pkg="prometheus_control" type="swarm_controller" name="swarm_controller_uav6" output="screen" launch-prefix="gnome-terminal --tab --">	
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav_id" value="$(arg uav6_id)"/>
		<param name="neighbour_id1" value="$(arg uav4_id)" />
		<param name="neighbour_id2" value="$(arg uav5_id)"/>
		<param name="uav_name" value="/$(arg uav6_name)"/>
		<param name="neighbour_name1" value="/$(arg uav4_name)" />
		<param name="neighbour_name2" value="/$(arg uav8_name)"/>
		<param name="k_p" value="$(arg k_p)"/>
		<param name="k_aij" value="$(arg k_aij)"/>
		<param name="k_gamma" value="$(arg k_gamma)"/>
		<param name="Takeoff_height" value="$(arg Takeoff_height)"/>
		<param name="Disarm_height" value="$(arg Disarm_height)"/>
		<param name="Land_speed" value="$(arg Land_speed)"/>
		<param name="geo_fence/x_min" value="$(arg x_min)"/>
		<param name="geo_fence/x_max" value="$(arg x_max)"/>
		<param name="geo_fence/y_min" value="$(arg y_min)"/>
		<param name="geo_fence/y_max" value="$(arg y_max)"/>
		<param name="geo_fence/z_min" value="$(arg z_min)"/>
		<param name="geo_fence/z_max" value="$(arg z_max)"/>	
		<param name="flag_printf" value="false"/>
	</node>

	<arg name="input_source" default="2"/>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav1" output="screen">
		<param name="uav_name" value="/$(arg uav1_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav2" output="screen">
		<param name="uav_name" value="/$(arg uav2_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav3" output="screen">
		<param name="uav_name" value="/$(arg uav3_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav4" output="screen">
		<param name="uav_name" value="/$(arg uav4_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav5" output="screen">
		<param name="uav_name" value="/$(arg uav5_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>
	<node pkg="prometheus_control" type="swarm_estimator" name="swarm_estimator_uav6" output="screen">
		<param name="uav_name" value="/$(arg uav6_name)"/>
		<param name="input_source" value="$(arg input_source)" />
	</node>

	<node pkg="prometheus_control" type="swarm_ground_station" name="swarm_ground_station" output="screen" launch-prefix="gnome-terminal --">
		<!-- 设置无人机名字才会在地面站显示 -->
		<param name="swarm_num" value="$(arg swarm_num)"/>
		<param name="uav1_name" value="/$(arg uav1_name)" />
		<param name="uav2_name" value="/$(arg uav2_name)" />
		<param name="uav3_name" value="/$(arg uav3_name)" />
		<param name="uav4_name" value="/$(arg uav4_name)" />
		<param name="uav5_name" value="/$(arg uav5_name)" />
		<param name="uav6_name" value="/$(arg uav6_name)" />
		<param name="uav1_id" value="$(arg uav1_id)" />
		<param name="uav2_id" value="$(arg uav2_id)" />
		<param name="uav3_id" value="$(arg uav3_id)" />
		<param name="uav4_id" value="$(arg uav4_id)" />
		<param name="uav5_id" value="$(arg uav5_id)" />
		<param name="uav6_id" value="$(arg uav6_id)" />
	</node>

	<node pkg="prometheus_mission" type="formation_flight" name="formation_flight" output="screen" launch-prefix="gnome-terminal --">
		<!-- 0代表位置追踪模式，１代表速度追踪模式，２代表加速度追踪模式  -->
		<param name="controller_num" value="0"/>
		<param name="virtual_leader_pos_x" value="0.0" />
		<param name="virtual_leader_pos_y" value="0.0" />
		<param name="virtual_leader_pos_z" value="1.0" />
		<param name="virtual_leader_yaw" value="0.0" />
		<param name="formation_size" value="1" />
	</node>

	<!-- run the rviz -->
	<arg name="visualization" default="true"/>
	<group if="$(arg visualization)">
		<node type="rviz" name="rviz" pkg="rviz" args="-d $(find prometheus_gazebo)/config/rviz_config/rviz_cxy_case1.rviz" />
    </group>
</launch>

